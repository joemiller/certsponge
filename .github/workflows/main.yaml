name: main
on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && !contains(toJson(github.event.commits), '[ci skip]') && !contains(toJson(github.event.commits), '[skip ci]')
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.46.2
          skip-go-installation: true
          skip-pkg-cache: true

      - name: Install GoReleaser
        # only need to lint goreleaser on one platform:
        if: startsWith(runner.os, 'Linux')
        uses: goreleaser/goreleaser-action@v2
        with:
          install-only: true

      - run: make lint
        shell: bash
      - run: make test
        shell: bash

  release-test:
    needs: [test]
    # don't waste time running a goreleaser test build on main since we will run a full release:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install GoReleaser
        if: startsWith(runner.os, 'Linux')
        uses: goreleaser/goreleaser-action@v2
        with:
          install-only: true

      - run: make snapshot

  release:
    needs: [test]
    # only create a release on main builds:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18.x
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Unshallow
        run: |
          # fetch all tags and history so that goreleaser can generate a proper changelog
          # and autotag can calculate the next version tag:
          git fetch --tags --unshallow --prune

          if [ $(git rev-parse --abbrev-ref HEAD) != "main" ]; then
            # ensure a local 'main' branch exists for autotag to work correctly:
            git branch --track main origin/main
          fi

      - name: Install GoReleaser
        if: startsWith(runner.os, 'Linux')
        uses: goreleaser/goreleaser-action@v2
        with:
          install-only: true

      - name: run autotag to increment version
        run: |
          curl -sL https://git.io/autotag-install | sudo sh -s -- -b /usr/local/bin
          autotag

      - name: build and push release artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.BREW_GITHUB_TOKEN }}
        run: |
          make deps
          make release
